"""Add resource capacity fields to Camp model

Revision ID: 87ae17a12fe1
Revises: 
Create Date: 2025-04-03 11:44:19.062402

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import sqlite

# revision identifiers, used by Alembic.
revision = '87ae17a12fe1'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('camps',
    sa.Column('cid', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('location', sa.String(length=200), nullable=False),
    sa.Column('capacity', sa.Integer(), nullable=False),
    sa.Column('current_occupancy', sa.Integer(), nullable=True),
    sa.Column('food_capacity', sa.Integer(), nullable=True),
    sa.Column('water_capacity', sa.Integer(), nullable=True),
    sa.Column('essentials_capacity', sa.Integer(), nullable=True),
    sa.Column('clothes_capacity', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('camp_head_id', sa.Integer(), nullable=True),
    sa.Column('coordinates_lat', sa.Float(), nullable=False),
    sa.Column('coordinates_lng', sa.Float(), nullable=False),
    sa.Column('contact_number', sa.String(length=20), nullable=True),
    sa.Column('people_list', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['camp_head_id'], ['users.uid'], ),
    sa.PrimaryKeyConstraint('cid')
    )
    op.create_table('users',
    sa.Column('uid', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=80), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.Column('role', sa.String(length=20), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.Column('associated_camp_id', sa.Integer(), nullable=True),
    sa.Column('associated_warehouse_id', sa.Integer(), nullable=True),
    sa.Column('location', sa.String(length=200), nullable=True),
    sa.Column('mobile', sa.String(length=20), nullable=True),
    sa.ForeignKeyConstraint(['associated_camp_id'], ['camps.cid'], ),
    sa.ForeignKeyConstraint(['associated_warehouse_id'], ['warehouses.wid'], ),
    sa.PrimaryKeyConstraint('uid'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('warehouses',
    sa.Column('wid', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('location', sa.String(length=200), nullable=False),
    sa.Column('coordinates_lat', sa.Float(), nullable=False),
    sa.Column('coordinates_lng', sa.Float(), nullable=False),
    sa.Column('contact_number', sa.String(length=20), nullable=True),
    sa.Column('food_capacity', sa.Integer(), nullable=False),
    sa.Column('water_capacity', sa.Integer(), nullable=False),
    sa.Column('essential_capacity', sa.Integer(), nullable=False),
    sa.Column('clothes_capacity', sa.Integer(), nullable=False),
    sa.Column('manager_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['manager_id'], ['users.uid'], ),
    sa.PrimaryKeyConstraint('wid')
    )
    op.create_table('camp_notifications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('camp_id', sa.Integer(), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('is_read', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['camp_id'], ['camps.cid'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('vehicles',
    sa.Column('vid', sa.Integer(), nullable=False),
    sa.Column('warehouse_id', sa.Integer(), nullable=False),
    sa.Column('capacity', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['warehouse_id'], ['warehouses.wid'], ),
    sa.PrimaryKeyConstraint('vid')
    )
    op.drop_table('vehicle')
    op.drop_table('warehouse')
    op.drop_table('user')
    op.drop_table('camp_notification')
    op.drop_table('camp')
    with op.batch_alter_table('donation', schema=None) as batch_op:
        batch_op.drop_constraint('fk_donation_user_id', type_='foreignkey')
        batch_op.create_foreign_key('fk_donation_user_id', 'users', ['user_id'], ['uid'], ondelete='SET NULL')

    with op.batch_alter_table('donation_amount', schema=None) as batch_op:
        batch_op.drop_constraint('fk_donation_amount_user_id', type_='foreignkey')
        batch_op.create_foreign_key('fk_donation_amount_user_id', 'users', ['user_id'], ['uid'])

    with op.batch_alter_table('recent_activities', schema=None) as batch_op:
        batch_op.drop_constraint('fk_recent_activity_user_id', type_='foreignkey')
        batch_op.create_foreign_key('fk_recent_activity_user_id', 'users', ['user_id'], ['uid'], ondelete='SET NULL')

    with op.batch_alter_table('reply', schema=None) as batch_op:
        batch_op.drop_constraint('fk_reply_user_id', type_='foreignkey')
        batch_op.create_foreign_key('fk_reply_user_id', 'users', ['user_id'], ['uid'], ondelete='SET NULL')

    with op.batch_alter_table('thread', schema=None) as batch_op:
        batch_op.drop_constraint('fk_thread_user_id', type_='foreignkey')
        batch_op.create_foreign_key('fk_thread_user_id', 'users', ['user_id'], ['uid'], ondelete='SET NULL')

    with op.batch_alter_table('user_activity', schema=None) as batch_op:
        batch_op.drop_constraint('fk_user_activity_user_id', type_='foreignkey')
        batch_op.create_foreign_key('fk_user_activity_user_id', 'users', ['user_id'], ['uid'], ondelete='SET NULL')

    with op.batch_alter_table('volunteer', schema=None) as batch_op:
        batch_op.drop_constraint('fk_volunteer_user_id', type_='foreignkey')
        batch_op.create_foreign_key('fk_volunteer_user_id', 'users', ['user_id'], ['uid'], ondelete='SET NULL')

    with op.batch_alter_table('volunteer_history', schema=None) as batch_op:
        batch_op.drop_constraint('fk_volunteer_history_camp_cid', type_='foreignkey')
        batch_op.create_foreign_key('fk_volunteer_history_camp_cid', 'camps', ['camp_id'], ['cid'], ondelete='SET NULL')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('volunteer_history', schema=None) as batch_op:
        batch_op.drop_constraint('fk_volunteer_history_camp_cid', type_='foreignkey')
        batch_op.create_foreign_key('fk_volunteer_history_camp_cid', 'camp', ['camp_id'], ['cid'], ondelete='SET NULL')

    with op.batch_alter_table('volunteer', schema=None) as batch_op:
        batch_op.drop_constraint('fk_volunteer_user_id', type_='foreignkey')
        batch_op.create_foreign_key('fk_volunteer_user_id', 'user', ['user_id'], ['uid'], ondelete='SET NULL')

    with op.batch_alter_table('user_activity', schema=None) as batch_op:
        batch_op.drop_constraint('fk_user_activity_user_id', type_='foreignkey')
        batch_op.create_foreign_key('fk_user_activity_user_id', 'user', ['user_id'], ['uid'], ondelete='SET NULL')

    with op.batch_alter_table('thread', schema=None) as batch_op:
        batch_op.drop_constraint('fk_thread_user_id', type_='foreignkey')
        batch_op.create_foreign_key('fk_thread_user_id', 'user', ['user_id'], ['uid'], ondelete='SET NULL')

    with op.batch_alter_table('reply', schema=None) as batch_op:
        batch_op.drop_constraint('fk_reply_user_id', type_='foreignkey')
        batch_op.create_foreign_key('fk_reply_user_id', 'user', ['user_id'], ['uid'], ondelete='SET NULL')

    with op.batch_alter_table('recent_activities', schema=None) as batch_op:
        batch_op.drop_constraint('fk_recent_activity_user_id', type_='foreignkey')
        batch_op.create_foreign_key('fk_recent_activity_user_id', 'user', ['user_id'], ['uid'], ondelete='SET NULL')

    with op.batch_alter_table('donation_amount', schema=None) as batch_op:
        batch_op.drop_constraint('fk_donation_amount_user_id', type_='foreignkey')
        batch_op.create_foreign_key('fk_donation_amount_user_id', 'user', ['user_id'], ['uid'])

    with op.batch_alter_table('donation', schema=None) as batch_op:
        batch_op.drop_constraint('fk_donation_user_id', type_='foreignkey')
        batch_op.create_foreign_key('fk_donation_user_id', 'user', ['user_id'], ['uid'], ondelete='SET NULL')

    op.create_table('camp',
    sa.Column('cid', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), nullable=False),
    sa.Column('location', sa.VARCHAR(length=200), nullable=False),
    sa.Column('capacity', sa.INTEGER(), nullable=False),
    sa.Column('current_occupancy', sa.INTEGER(), nullable=True),
    sa.Column('status', sa.VARCHAR(length=20), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('camp_head_id', sa.INTEGER(), nullable=True),
    sa.Column('coordinates_lat', sa.FLOAT(), nullable=False),
    sa.Column('coordinates_lng', sa.FLOAT(), nullable=False),
    sa.Column('contact_number', sa.VARCHAR(length=20), nullable=True),
    sa.Column('people_list', sqlite.JSON(), nullable=True),
    sa.Column('food_capacity', sa.INTEGER(), nullable=True),
    sa.Column('food_stock_quota', sa.INTEGER(), nullable=True),
    sa.Column('water_capacity', sa.INTEGER(), nullable=True),
    sa.Column('water_stock_litres', sa.INTEGER(), nullable=True),
    sa.Column('essentials_capacity', sa.INTEGER(), nullable=True),
    sa.Column('essentials_stock', sa.INTEGER(), nullable=True),
    sa.Column('clothes_capacity', sa.INTEGER(), nullable=True),
    sa.Column('clothes_stock', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['camp_head_id'], ['user.uid'], name='fk_camp_head_id', ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('cid')
    )
    op.create_table('camp_notification',
    sa.Column('aid', sa.INTEGER(), nullable=False),
    sa.Column('message', sa.VARCHAR(length=500), nullable=False),
    sa.Column('timestamp', sa.DATETIME(), nullable=True),
    sa.Column('camp_id', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['camp_id'], ['camp.cid'], name='fk_camp_notification_camp_id', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('aid')
    )
    op.create_table('user',
    sa.Column('uid', sa.INTEGER(), nullable=False),
    sa.Column('username', sa.VARCHAR(length=80), nullable=False),
    sa.Column('email', sa.VARCHAR(length=120), nullable=False),
    sa.Column('password', sa.VARCHAR(length=120), nullable=False),
    sa.Column('role', sa.VARCHAR(length=20), nullable=False),
    sa.Column('location', sa.VARCHAR(length=200), nullable=True),
    sa.Column('mobile', sa.VARCHAR(length=20), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('associated_camp_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['associated_camp_id'], ['camp.cid'], name='fk_user_associated_camp_id', ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('uid'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('warehouse',
    sa.Column('wid', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), nullable=False),
    sa.Column('location', sa.VARCHAR(length=200), nullable=False),
    sa.Column('latitude', sa.FLOAT(), nullable=False),
    sa.Column('longitude', sa.FLOAT(), nullable=False),
    sa.Column('food_capacity', sa.INTEGER(), nullable=False),
    sa.Column('water_capacity', sa.INTEGER(), nullable=False),
    sa.Column('essential_capacity', sa.INTEGER(), nullable=False),
    sa.Column('clothes_capacity', sa.INTEGER(), nullable=False),
    sa.Column('manager_id', sa.INTEGER(), nullable=True),
    sa.Column('status', sa.VARCHAR(length=20), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['manager_id'], ['user.uid'], ),
    sa.PrimaryKeyConstraint('wid')
    )
    op.create_table('vehicle',
    sa.Column('vid', sa.INTEGER(), nullable=False),
    sa.Column('vehicle_id', sa.VARCHAR(length=50), nullable=False),
    sa.Column('capacity', sa.FLOAT(), nullable=False),
    sa.Column('status', sa.VARCHAR(length=20), nullable=True),
    sa.Column('warehouse_id', sa.INTEGER(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['warehouse_id'], ['warehouse.wid'], ),
    sa.PrimaryKeyConstraint('vid'),
    sa.UniqueConstraint('vehicle_id')
    )
    op.drop_table('vehicles')
    op.drop_table('camp_notifications')
    op.drop_table('warehouses')
    op.drop_table('users')
    op.drop_table('camps')
    # ### end Alembic commands ###
